<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liucan.mapper.BorrowMapper">
  <resultMap id="BaseResultMap" type="com.liucan.entity.Borrow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    <id column="bookid" jdbcType="INTEGER" property="bookid" />
    <id column="readerid" jdbcType="CHAR" property="readerid" />
    <result column="fineid" jdbcType="INTEGER" property="fineid" />
    <result column="borrowdate" jdbcType="DATE" property="borrowdate" />
    <result column="expiredate" jdbcType="DATE" property="expiredate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    bookid, readerid, fineid, borrowdate, expiredate
  </sql>
  <select id="selectByExample" parameterType="com.liucan.entity.BorrowExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from borrow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.liucan.entity.BorrowKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from borrow
    where bookid = #{bookid,jdbcType=INTEGER}
      and readerid = #{readerid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.liucan.entity.BorrowKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    delete from borrow
    where bookid = #{bookid,jdbcType=INTEGER}
      and readerid = #{readerid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.liucan.entity.BorrowExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    delete from borrow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liucan.entity.Borrow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    insert into borrow (bookid, readerid, fineid, 
      borrowdate, expiredate)
    values (#{bookid,jdbcType=INTEGER}, #{readerid,jdbcType=CHAR}, #{fineid,jdbcType=INTEGER}, 
      #{borrowdate,jdbcType=DATE}, #{expiredate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.liucan.entity.Borrow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    insert into borrow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookid != null">
        bookid,
      </if>
      <if test="readerid != null">
        readerid,
      </if>
      <if test="fineid != null">
        fineid,
      </if>
      <if test="borrowdate != null">
        borrowdate,
      </if>
      <if test="expiredate != null">
        expiredate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="readerid != null">
        #{readerid,jdbcType=CHAR},
      </if>
      <if test="fineid != null">
        #{fineid,jdbcType=INTEGER},
      </if>
      <if test="borrowdate != null">
        #{borrowdate,jdbcType=DATE},
      </if>
      <if test="expiredate != null">
        #{expiredate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liucan.entity.BorrowExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    select count(*) from borrow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    update borrow
    <set>
      <if test="record.bookid != null">
        bookid = #{record.bookid,jdbcType=INTEGER},
      </if>
      <if test="record.readerid != null">
        readerid = #{record.readerid,jdbcType=CHAR},
      </if>
      <if test="record.fineid != null">
        fineid = #{record.fineid,jdbcType=INTEGER},
      </if>
      <if test="record.borrowdate != null">
        borrowdate = #{record.borrowdate,jdbcType=DATE},
      </if>
      <if test="record.expiredate != null">
        expiredate = #{record.expiredate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    update borrow
    set bookid = #{record.bookid,jdbcType=INTEGER},
      readerid = #{record.readerid,jdbcType=CHAR},
      fineid = #{record.fineid,jdbcType=INTEGER},
      borrowdate = #{record.borrowdate,jdbcType=DATE},
      expiredate = #{record.expiredate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liucan.entity.Borrow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    update borrow
    <set>
      <if test="fineid != null">
        fineid = #{fineid,jdbcType=INTEGER},
      </if>
      <if test="borrowdate != null">
        borrowdate = #{borrowdate,jdbcType=DATE},
      </if>
      <if test="expiredate != null">
        expiredate = #{expiredate,jdbcType=DATE},
      </if>
    </set>
    where bookid = #{bookid,jdbcType=INTEGER}
      and readerid = #{readerid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liucan.entity.Borrow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    update borrow
    set fineid = #{fineid,jdbcType=INTEGER},
      borrowdate = #{borrowdate,jdbcType=DATE},
      expiredate = #{expiredate,jdbcType=DATE}
    where bookid = #{bookid,jdbcType=INTEGER}
      and readerid = #{readerid,jdbcType=CHAR}
  </update>

  <!--List<Book> getborrowbooks(String readerid);-->
  <select id="getborrowbooks" resultType="com.liucan.entity.Book">
    select book.* from book inner join borrow on book.bookid=borrow.bookid where readerid=#{readerid}
  </select>
  <!--void deletebooks(Integer[] bookids);-->
  <delete id="deletebooks">
    delete from borrow where bookid in (
    <foreach collection="bookids" item="bookid" separator=",">
      #{bookid}
    </foreach>
    )
  </delete>
  <select id="queryByLimit" resultMap="resultmap1">
    select * from borrow
    <where>
      <if test="queryLikeStr != ''">
        bookid like CONCAT('%',#{queryLikeStr},'%') and
      </if>
     expiredate &lt; curdate()
    </where>
    LIMIT #{start},#{size}
  </select>
  <resultMap id="resultmap1" type="com.liucan.entity.Borrow">
    <id column="bookid" property="bookid"></id>
    <result column="expiredate" property="expiredate"></result>
    <result column="borrowdate" property="borrowdate"></result>
    <association property="reader" column="readerid" select="com.liucan.mapper.ReaderMapper.queryreaderById"></association>
    <association property="book" column="bookid" select="com.liucan.mapper.BookMapper.querybookById"></association>
  </resultMap>
  <!--int queryCount(HashMap<String,Object> map);-->
  <select id="queryCount" resultType="_int">
    select count(*) from borrow
    <where>
      <if test="queryLikeStr != ''">
        bookid like CONCAT('%',#{queryLikeStr},'%')
      </if>
      expiredate &lt; curdate()
    </where>
    LIMIT #{start},#{size}
  </select>
  <!--List<Borrow> queryOverdue();-->
  <select id="queryOverdue" resultMap="resultmap1">
    select * from borrow where  expiredate &lt; curdate()
  </select>
</mapper>