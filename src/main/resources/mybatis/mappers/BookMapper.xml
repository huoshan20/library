<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liucan.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="com.liucan.entity.Book">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    <id column="bookid" jdbcType="INTEGER" property="bookid" />
    <result column="isbn"  property="isbn" />
    <result column="bookname"  property="bookname" />
    <result column="author"  property="author" />
    <result column="content"  property="content" />
    <result column="translator"  property="translator" />
    <result column="publisher"  property="publisher" />
    <result column="price"  property="price" />
    <result column="booktypeid" jdbcType="INTEGER" property="booktypeid" />
    <result column="bookshelfid" jdbcType="INTEGER" property="bookshelfid" />
    <result column="bookstatus"  property="bookstatus" />
    <result column="borrowtotals" jdbcType="INTEGER" property="borrowtotals" />
    <result column="indate"  property="indate" />
    <result column="publishdate"  property="publishdate" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    isbn, book_name, price, publish_id
  </sql>
  <select id="selectByExample" parameterType="com.liucan.entity.BookExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    select 
    *
    from book
    where bookid = #{bookid}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    delete from book
    where isbn = #{isbn,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.liucan.entity.BookExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liucan.entity.Book">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    insert into book (isbn, book_name, price, 
      publish_id)
    values (#{isbn,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{publishId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.liucan.entity.Book">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="isbn != null">
        isbn,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="publishId != null">
        publish_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="publishId != null">
        #{publishId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liucan.entity.BookExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    update book
    <set>
      <if test="record.isbn != null">
        isbn = #{record.isbn,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.publishId != null">
        publish_id = #{record.publishId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    update book
    set isbn = #{record.isbn,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      publish_id = #{record.publishId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liucan.entity.Book">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    update book
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="publishId != null">
        publish_id = #{publishId,jdbcType=INTEGER},
      </if>
    </set>
    where isbn = #{isbn,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liucan.entity.Book">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    update book
    set book_name = #{bookName,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      publish_id = #{publishId,jdbcType=INTEGER}
    where isbn = #{isbn,jdbcType=VARCHAR}
  </update>
  <!--Book selectbybookid(Integer bookid);-->
  <select id="selectbybookid" resultType="com.liucan.entity.Book">
    select * from book where bookid=#{bookid}
  </select>
  <!--List<Book> queryByLimit(HashMap<String,Object> map);-->
  <select id="queryByLimit" resultMap="resultmap1">
    select * from book
    <where>
      <if test="queryLikeStr != ''">
        bookname like CONCAT('%',#{queryLikeStr},'%')
      </if>
    </where>
    LIMIT #{start},#{size}
  </select>
  <resultMap id="resultmap1" type="com.liucan.entity.Book">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 29 16:04:15 CST 2019.
    -->
    <id column="bookid" jdbcType="INTEGER" property="bookid" />
    <result column="isbn"  property="isbn" />
    <result column="bookname"  property="bookname" />
    <result column="author"  property="author" />
    <result column="content"  property="content" />
    <result column="translator"  property="translator" />
    <result column="publisher"  property="publisher" />
    <result column="price"  property="price" />
    <result column="bookstatus"  property="bookstatus" />
    <result column="borrowtotals" jdbcType="INTEGER" property="borrowtotals" />
    <result column="indate"  property="indate" />
    <result column="publishdate"  property="publishdate" />
     <association property="booktype" column="booktypeid" select="com.liucan.mapper.BooktypeMapper.selectByPrimaryKey">
     </association>
    <association property="bookshelf" column="bookshelfid" select="com.liucan.mapper.BookshelfMapper.selectByPrimaryKey">
    </association>
  </resultMap>
  <!--int queryCount(HashMap<String,Object> map);-->
  <select id="queryCount" resultType="_int">
    SELECT COUNT(*) FROM book
    <where>
      <if test="queryLikeStr != ''">
        bookname like CONCAT('%',#{queryLikeStr},'%')
      </if>

    </where>
  </select>


  <delete id="deletebooks">
    delete from book where bookid IN(
    <foreach collection="bookIds" item="bookId" separator=",">
      #{bookId}
    </foreach>
    )
  </delete>

  <delete id="deletebook">

      delete from book where bookid=#{bookId}

  </delete>

  <select id="querybookById" resultType="com.liucan.entity.Book">
  select * from book where bookid=#{bookid}
</select>
  <!--void updatebook(Book book);-->
  <update id="updatebook">
    update book
    <set>

      <if test="booktypeid != null">
        booktypeid  = #{booktypeid },
      </if>
      <if test="bookshelfid != null">
        bookshelfid  = #{bookshelfid },
      </if>
      <if test="bookname != null">
        bookname  = #{bookname },
      </if>
      <if test="author != null">
        author  = #{author },
      </if>
      <if test="publishdate != null">
        publishdate  = #{publishdate },
      </if>
      <if test="content != null">
        content  = #{content },
      </if>
      <if test="price != null">
        price  = #{price },
      </if>
      <if test="indate != null">
        indate  = #{indate },
      </if>
      <if test="isbn != null">
        isbn  = #{isbn },
      </if>
      <if test="translator != null">
        translator  = #{translator },
      </if>
      <if test="publisher != null">
        publisher  = #{publisher },
      </if>
    </set>
where bookid=#{bookid}
  </update>
  <!--void addbook(Book book);-->
  <insert id="addbook">
    insert into book values (null,#{booktypeid},#{bookshelfid},#{bookname},#{author},#{publishdate}
    ,#{content},#{price},#{indate},#{bookstatus},#{borrowtotals}, #{isbn},#{translator},#{publisher})
  </insert>
</mapper>