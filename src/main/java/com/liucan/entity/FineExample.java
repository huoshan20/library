package com.liucan.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FineExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public FineExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andFineidIsNull() {
            addCriterion("fineid is null");
            return (Criteria) this;
        }

        public Criteria andFineidIsNotNull() {
            addCriterion("fineid is not null");
            return (Criteria) this;
        }

        public Criteria andFineidEqualTo(Integer value) {
            addCriterion("fineid =", value, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidNotEqualTo(Integer value) {
            addCriterion("fineid <>", value, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidGreaterThan(Integer value) {
            addCriterion("fineid >", value, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidGreaterThanOrEqualTo(Integer value) {
            addCriterion("fineid >=", value, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidLessThan(Integer value) {
            addCriterion("fineid <", value, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidLessThanOrEqualTo(Integer value) {
            addCriterion("fineid <=", value, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidIn(List<Integer> values) {
            addCriterion("fineid in", values, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidNotIn(List<Integer> values) {
            addCriterion("fineid not in", values, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidBetween(Integer value1, Integer value2) {
            addCriterion("fineid between", value1, value2, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidNotBetween(Integer value1, Integer value2) {
            addCriterion("fineid not between", value1, value2, "fineid");
            return (Criteria) this;
        }

        public Criteria andDamageIsNull() {
            addCriterion("damage is null");
            return (Criteria) this;
        }

        public Criteria andDamageIsNotNull() {
            addCriterion("damage is not null");
            return (Criteria) this;
        }

        public Criteria andDamageEqualTo(Double value) {
            addCriterion("damage =", value, "damage");
            return (Criteria) this;
        }

        public Criteria andDamageNotEqualTo(Double value) {
            addCriterion("damage <>", value, "damage");
            return (Criteria) this;
        }

        public Criteria andDamageGreaterThan(Double value) {
            addCriterion("damage >", value, "damage");
            return (Criteria) this;
        }

        public Criteria andDamageGreaterThanOrEqualTo(Double value) {
            addCriterion("damage >=", value, "damage");
            return (Criteria) this;
        }

        public Criteria andDamageLessThan(Double value) {
            addCriterion("damage <", value, "damage");
            return (Criteria) this;
        }

        public Criteria andDamageLessThanOrEqualTo(Double value) {
            addCriterion("damage <=", value, "damage");
            return (Criteria) this;
        }

        public Criteria andDamageIn(List<Double> values) {
            addCriterion("damage in", values, "damage");
            return (Criteria) this;
        }

        public Criteria andDamageNotIn(List<Double> values) {
            addCriterion("damage not in", values, "damage");
            return (Criteria) this;
        }

        public Criteria andDamageBetween(Double value1, Double value2) {
            addCriterion("damage between", value1, value2, "damage");
            return (Criteria) this;
        }

        public Criteria andDamageNotBetween(Double value1, Double value2) {
            addCriterion("damage not between", value1, value2, "damage");
            return (Criteria) this;
        }

        public Criteria andDamagemoneyIsNull() {
            addCriterion("damagemoney is null");
            return (Criteria) this;
        }

        public Criteria andDamagemoneyIsNotNull() {
            addCriterion("damagemoney is not null");
            return (Criteria) this;
        }

        public Criteria andDamagemoneyEqualTo(Double value) {
            addCriterion("damagemoney =", value, "damagemoney");
            return (Criteria) this;
        }

        public Criteria andDamagemoneyNotEqualTo(Double value) {
            addCriterion("damagemoney <>", value, "damagemoney");
            return (Criteria) this;
        }

        public Criteria andDamagemoneyGreaterThan(Double value) {
            addCriterion("damagemoney >", value, "damagemoney");
            return (Criteria) this;
        }

        public Criteria andDamagemoneyGreaterThanOrEqualTo(Double value) {
            addCriterion("damagemoney >=", value, "damagemoney");
            return (Criteria) this;
        }

        public Criteria andDamagemoneyLessThan(Double value) {
            addCriterion("damagemoney <", value, "damagemoney");
            return (Criteria) this;
        }

        public Criteria andDamagemoneyLessThanOrEqualTo(Double value) {
            addCriterion("damagemoney <=", value, "damagemoney");
            return (Criteria) this;
        }

        public Criteria andDamagemoneyIn(List<Double> values) {
            addCriterion("damagemoney in", values, "damagemoney");
            return (Criteria) this;
        }

        public Criteria andDamagemoneyNotIn(List<Double> values) {
            addCriterion("damagemoney not in", values, "damagemoney");
            return (Criteria) this;
        }

        public Criteria andDamagemoneyBetween(Double value1, Double value2) {
            addCriterion("damagemoney between", value1, value2, "damagemoney");
            return (Criteria) this;
        }

        public Criteria andDamagemoneyNotBetween(Double value1, Double value2) {
            addCriterion("damagemoney not between", value1, value2, "damagemoney");
            return (Criteria) this;
        }

        public Criteria andOverduedayIsNull() {
            addCriterion("overdueday is null");
            return (Criteria) this;
        }

        public Criteria andOverduedayIsNotNull() {
            addCriterion("overdueday is not null");
            return (Criteria) this;
        }

        public Criteria andOverduedayEqualTo(Integer value) {
            addCriterion("overdueday =", value, "overdueday");
            return (Criteria) this;
        }

        public Criteria andOverduedayNotEqualTo(Integer value) {
            addCriterion("overdueday <>", value, "overdueday");
            return (Criteria) this;
        }

        public Criteria andOverduedayGreaterThan(Integer value) {
            addCriterion("overdueday >", value, "overdueday");
            return (Criteria) this;
        }

        public Criteria andOverduedayGreaterThanOrEqualTo(Integer value) {
            addCriterion("overdueday >=", value, "overdueday");
            return (Criteria) this;
        }

        public Criteria andOverduedayLessThan(Integer value) {
            addCriterion("overdueday <", value, "overdueday");
            return (Criteria) this;
        }

        public Criteria andOverduedayLessThanOrEqualTo(Integer value) {
            addCriterion("overdueday <=", value, "overdueday");
            return (Criteria) this;
        }

        public Criteria andOverduedayIn(List<Integer> values) {
            addCriterion("overdueday in", values, "overdueday");
            return (Criteria) this;
        }

        public Criteria andOverduedayNotIn(List<Integer> values) {
            addCriterion("overdueday not in", values, "overdueday");
            return (Criteria) this;
        }

        public Criteria andOverduedayBetween(Integer value1, Integer value2) {
            addCriterion("overdueday between", value1, value2, "overdueday");
            return (Criteria) this;
        }

        public Criteria andOverduedayNotBetween(Integer value1, Integer value2) {
            addCriterion("overdueday not between", value1, value2, "overdueday");
            return (Criteria) this;
        }

        public Criteria andOverduedateIsNull() {
            addCriterion("overduedate is null");
            return (Criteria) this;
        }

        public Criteria andOverduedateIsNotNull() {
            addCriterion("overduedate is not null");
            return (Criteria) this;
        }

        public Criteria andOverduedateEqualTo(Date value) {
            addCriterionForJDBCDate("overduedate =", value, "overduedate");
            return (Criteria) this;
        }

        public Criteria andOverduedateNotEqualTo(Date value) {
            addCriterionForJDBCDate("overduedate <>", value, "overduedate");
            return (Criteria) this;
        }

        public Criteria andOverduedateGreaterThan(Date value) {
            addCriterionForJDBCDate("overduedate >", value, "overduedate");
            return (Criteria) this;
        }

        public Criteria andOverduedateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("overduedate >=", value, "overduedate");
            return (Criteria) this;
        }

        public Criteria andOverduedateLessThan(Date value) {
            addCriterionForJDBCDate("overduedate <", value, "overduedate");
            return (Criteria) this;
        }

        public Criteria andOverduedateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("overduedate <=", value, "overduedate");
            return (Criteria) this;
        }

        public Criteria andOverduedateIn(List<Date> values) {
            addCriterionForJDBCDate("overduedate in", values, "overduedate");
            return (Criteria) this;
        }

        public Criteria andOverduedateNotIn(List<Date> values) {
            addCriterionForJDBCDate("overduedate not in", values, "overduedate");
            return (Criteria) this;
        }

        public Criteria andOverduedateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("overduedate between", value1, value2, "overduedate");
            return (Criteria) this;
        }

        public Criteria andOverduedateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("overduedate not between", value1, value2, "overduedate");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeIsNull() {
            addCriterion("paymenttype is null");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeIsNotNull() {
            addCriterion("paymenttype is not null");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeEqualTo(String value) {
            addCriterion("paymenttype =", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeNotEqualTo(String value) {
            addCriterion("paymenttype <>", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeGreaterThan(String value) {
            addCriterion("paymenttype >", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeGreaterThanOrEqualTo(String value) {
            addCriterion("paymenttype >=", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeLessThan(String value) {
            addCriterion("paymenttype <", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeLessThanOrEqualTo(String value) {
            addCriterion("paymenttype <=", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeLike(String value) {
            addCriterion("paymenttype like", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeNotLike(String value) {
            addCriterion("paymenttype not like", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeIn(List<String> values) {
            addCriterion("paymenttype in", values, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeNotIn(List<String> values) {
            addCriterion("paymenttype not in", values, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeBetween(String value1, String value2) {
            addCriterion("paymenttype between", value1, value2, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeNotBetween(String value1, String value2) {
            addCriterion("paymenttype not between", value1, value2, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymentmoneyIsNull() {
            addCriterion("paymentmoney is null");
            return (Criteria) this;
        }

        public Criteria andPaymentmoneyIsNotNull() {
            addCriterion("paymentmoney is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentmoneyEqualTo(Byte value) {
            addCriterion("paymentmoney =", value, "paymentmoney");
            return (Criteria) this;
        }

        public Criteria andPaymentmoneyNotEqualTo(Byte value) {
            addCriterion("paymentmoney <>", value, "paymentmoney");
            return (Criteria) this;
        }

        public Criteria andPaymentmoneyGreaterThan(Byte value) {
            addCriterion("paymentmoney >", value, "paymentmoney");
            return (Criteria) this;
        }

        public Criteria andPaymentmoneyGreaterThanOrEqualTo(Byte value) {
            addCriterion("paymentmoney >=", value, "paymentmoney");
            return (Criteria) this;
        }

        public Criteria andPaymentmoneyLessThan(Byte value) {
            addCriterion("paymentmoney <", value, "paymentmoney");
            return (Criteria) this;
        }

        public Criteria andPaymentmoneyLessThanOrEqualTo(Byte value) {
            addCriterion("paymentmoney <=", value, "paymentmoney");
            return (Criteria) this;
        }

        public Criteria andPaymentmoneyIn(List<Byte> values) {
            addCriterion("paymentmoney in", values, "paymentmoney");
            return (Criteria) this;
        }

        public Criteria andPaymentmoneyNotIn(List<Byte> values) {
            addCriterion("paymentmoney not in", values, "paymentmoney");
            return (Criteria) this;
        }

        public Criteria andPaymentmoneyBetween(Byte value1, Byte value2) {
            addCriterion("paymentmoney between", value1, value2, "paymentmoney");
            return (Criteria) this;
        }

        public Criteria andPaymentmoneyNotBetween(Byte value1, Byte value2) {
            addCriterion("paymentmoney not between", value1, value2, "paymentmoney");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fine
     *
     * @mbg.generated do_not_delete_during_merge Sun Dec 29 16:04:15 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fine
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}