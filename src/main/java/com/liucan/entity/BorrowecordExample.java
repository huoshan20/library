package com.liucan.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class BorrowecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public BorrowecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andBorrowecordidIsNull() {
            addCriterion("borrowecordid is null");
            return (Criteria) this;
        }

        public Criteria andBorrowecordidIsNotNull() {
            addCriterion("borrowecordid is not null");
            return (Criteria) this;
        }

        public Criteria andBorrowecordidEqualTo(Integer value) {
            addCriterion("borrowecordid =", value, "borrowecordid");
            return (Criteria) this;
        }

        public Criteria andBorrowecordidNotEqualTo(Integer value) {
            addCriterion("borrowecordid <>", value, "borrowecordid");
            return (Criteria) this;
        }

        public Criteria andBorrowecordidGreaterThan(Integer value) {
            addCriterion("borrowecordid >", value, "borrowecordid");
            return (Criteria) this;
        }

        public Criteria andBorrowecordidGreaterThanOrEqualTo(Integer value) {
            addCriterion("borrowecordid >=", value, "borrowecordid");
            return (Criteria) this;
        }

        public Criteria andBorrowecordidLessThan(Integer value) {
            addCriterion("borrowecordid <", value, "borrowecordid");
            return (Criteria) this;
        }

        public Criteria andBorrowecordidLessThanOrEqualTo(Integer value) {
            addCriterion("borrowecordid <=", value, "borrowecordid");
            return (Criteria) this;
        }

        public Criteria andBorrowecordidIn(List<Integer> values) {
            addCriterion("borrowecordid in", values, "borrowecordid");
            return (Criteria) this;
        }

        public Criteria andBorrowecordidNotIn(List<Integer> values) {
            addCriterion("borrowecordid not in", values, "borrowecordid");
            return (Criteria) this;
        }

        public Criteria andBorrowecordidBetween(Integer value1, Integer value2) {
            addCriterion("borrowecordid between", value1, value2, "borrowecordid");
            return (Criteria) this;
        }

        public Criteria andBorrowecordidNotBetween(Integer value1, Integer value2) {
            addCriterion("borrowecordid not between", value1, value2, "borrowecordid");
            return (Criteria) this;
        }

        public Criteria andFineidIsNull() {
            addCriterion("fineid is null");
            return (Criteria) this;
        }

        public Criteria andFineidIsNotNull() {
            addCriterion("fineid is not null");
            return (Criteria) this;
        }

        public Criteria andFineidEqualTo(Integer value) {
            addCriterion("fineid =", value, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidNotEqualTo(Integer value) {
            addCriterion("fineid <>", value, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidGreaterThan(Integer value) {
            addCriterion("fineid >", value, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidGreaterThanOrEqualTo(Integer value) {
            addCriterion("fineid >=", value, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidLessThan(Integer value) {
            addCriterion("fineid <", value, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidLessThanOrEqualTo(Integer value) {
            addCriterion("fineid <=", value, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidIn(List<Integer> values) {
            addCriterion("fineid in", values, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidNotIn(List<Integer> values) {
            addCriterion("fineid not in", values, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidBetween(Integer value1, Integer value2) {
            addCriterion("fineid between", value1, value2, "fineid");
            return (Criteria) this;
        }

        public Criteria andFineidNotBetween(Integer value1, Integer value2) {
            addCriterion("fineid not between", value1, value2, "fineid");
            return (Criteria) this;
        }

        public Criteria andReaderidIsNull() {
            addCriterion("readerid is null");
            return (Criteria) this;
        }

        public Criteria andReaderidIsNotNull() {
            addCriterion("readerid is not null");
            return (Criteria) this;
        }

        public Criteria andReaderidEqualTo(String value) {
            addCriterion("readerid =", value, "readerid");
            return (Criteria) this;
        }

        public Criteria andReaderidNotEqualTo(String value) {
            addCriterion("readerid <>", value, "readerid");
            return (Criteria) this;
        }

        public Criteria andReaderidGreaterThan(String value) {
            addCriterion("readerid >", value, "readerid");
            return (Criteria) this;
        }

        public Criteria andReaderidGreaterThanOrEqualTo(String value) {
            addCriterion("readerid >=", value, "readerid");
            return (Criteria) this;
        }

        public Criteria andReaderidLessThan(String value) {
            addCriterion("readerid <", value, "readerid");
            return (Criteria) this;
        }

        public Criteria andReaderidLessThanOrEqualTo(String value) {
            addCriterion("readerid <=", value, "readerid");
            return (Criteria) this;
        }

        public Criteria andReaderidLike(String value) {
            addCriterion("readerid like", value, "readerid");
            return (Criteria) this;
        }

        public Criteria andReaderidNotLike(String value) {
            addCriterion("readerid not like", value, "readerid");
            return (Criteria) this;
        }

        public Criteria andReaderidIn(List<String> values) {
            addCriterion("readerid in", values, "readerid");
            return (Criteria) this;
        }

        public Criteria andReaderidNotIn(List<String> values) {
            addCriterion("readerid not in", values, "readerid");
            return (Criteria) this;
        }

        public Criteria andReaderidBetween(String value1, String value2) {
            addCriterion("readerid between", value1, value2, "readerid");
            return (Criteria) this;
        }

        public Criteria andReaderidNotBetween(String value1, String value2) {
            addCriterion("readerid not between", value1, value2, "readerid");
            return (Criteria) this;
        }

        public Criteria andBookidIsNull() {
            addCriterion("bookid is null");
            return (Criteria) this;
        }

        public Criteria andBookidIsNotNull() {
            addCriterion("bookid is not null");
            return (Criteria) this;
        }

        public Criteria andBookidEqualTo(Integer value) {
            addCriterion("bookid =", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidNotEqualTo(Integer value) {
            addCriterion("bookid <>", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidGreaterThan(Integer value) {
            addCriterion("bookid >", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidGreaterThanOrEqualTo(Integer value) {
            addCriterion("bookid >=", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidLessThan(Integer value) {
            addCriterion("bookid <", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidLessThanOrEqualTo(Integer value) {
            addCriterion("bookid <=", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidIn(List<Integer> values) {
            addCriterion("bookid in", values, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidNotIn(List<Integer> values) {
            addCriterion("bookid not in", values, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidBetween(Integer value1, Integer value2) {
            addCriterion("bookid between", value1, value2, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidNotBetween(Integer value1, Integer value2) {
            addCriterion("bookid not between", value1, value2, "bookid");
            return (Criteria) this;
        }

        public Criteria andBorrowdateIsNull() {
            addCriterion("borrowdate is null");
            return (Criteria) this;
        }

        public Criteria andBorrowdateIsNotNull() {
            addCriterion("borrowdate is not null");
            return (Criteria) this;
        }

        public Criteria andBorrowdateEqualTo(Date value) {
            addCriterionForJDBCDate("borrowdate =", value, "borrowdate");
            return (Criteria) this;
        }

        public Criteria andBorrowdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("borrowdate <>", value, "borrowdate");
            return (Criteria) this;
        }

        public Criteria andBorrowdateGreaterThan(Date value) {
            addCriterionForJDBCDate("borrowdate >", value, "borrowdate");
            return (Criteria) this;
        }

        public Criteria andBorrowdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("borrowdate >=", value, "borrowdate");
            return (Criteria) this;
        }

        public Criteria andBorrowdateLessThan(Date value) {
            addCriterionForJDBCDate("borrowdate <", value, "borrowdate");
            return (Criteria) this;
        }

        public Criteria andBorrowdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("borrowdate <=", value, "borrowdate");
            return (Criteria) this;
        }

        public Criteria andBorrowdateIn(List<Date> values) {
            addCriterionForJDBCDate("borrowdate in", values, "borrowdate");
            return (Criteria) this;
        }

        public Criteria andBorrowdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("borrowdate not in", values, "borrowdate");
            return (Criteria) this;
        }

        public Criteria andBorrowdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("borrowdate between", value1, value2, "borrowdate");
            return (Criteria) this;
        }

        public Criteria andBorrowdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("borrowdate not between", value1, value2, "borrowdate");
            return (Criteria) this;
        }

        public Criteria andExpiredateIsNull() {
            addCriterion("expiredate is null");
            return (Criteria) this;
        }

        public Criteria andExpiredateIsNotNull() {
            addCriterion("expiredate is not null");
            return (Criteria) this;
        }

        public Criteria andExpiredateEqualTo(Date value) {
            addCriterionForJDBCDate("expiredate =", value, "expiredate");
            return (Criteria) this;
        }

        public Criteria andExpiredateNotEqualTo(Date value) {
            addCriterionForJDBCDate("expiredate <>", value, "expiredate");
            return (Criteria) this;
        }

        public Criteria andExpiredateGreaterThan(Date value) {
            addCriterionForJDBCDate("expiredate >", value, "expiredate");
            return (Criteria) this;
        }

        public Criteria andExpiredateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("expiredate >=", value, "expiredate");
            return (Criteria) this;
        }

        public Criteria andExpiredateLessThan(Date value) {
            addCriterionForJDBCDate("expiredate <", value, "expiredate");
            return (Criteria) this;
        }

        public Criteria andExpiredateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("expiredate <=", value, "expiredate");
            return (Criteria) this;
        }

        public Criteria andExpiredateIn(List<Date> values) {
            addCriterionForJDBCDate("expiredate in", values, "expiredate");
            return (Criteria) this;
        }

        public Criteria andExpiredateNotIn(List<Date> values) {
            addCriterionForJDBCDate("expiredate not in", values, "expiredate");
            return (Criteria) this;
        }

        public Criteria andExpiredateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("expiredate between", value1, value2, "expiredate");
            return (Criteria) this;
        }

        public Criteria andExpiredateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("expiredate not between", value1, value2, "expiredate");
            return (Criteria) this;
        }

        public Criteria andReturndateIsNull() {
            addCriterion("returndate is null");
            return (Criteria) this;
        }

        public Criteria andReturndateIsNotNull() {
            addCriterion("returndate is not null");
            return (Criteria) this;
        }

        public Criteria andReturndateEqualTo(Date value) {
            addCriterionForJDBCDate("returndate =", value, "returndate");
            return (Criteria) this;
        }

        public Criteria andReturndateNotEqualTo(Date value) {
            addCriterionForJDBCDate("returndate <>", value, "returndate");
            return (Criteria) this;
        }

        public Criteria andReturndateGreaterThan(Date value) {
            addCriterionForJDBCDate("returndate >", value, "returndate");
            return (Criteria) this;
        }

        public Criteria andReturndateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("returndate >=", value, "returndate");
            return (Criteria) this;
        }

        public Criteria andReturndateLessThan(Date value) {
            addCriterionForJDBCDate("returndate <", value, "returndate");
            return (Criteria) this;
        }

        public Criteria andReturndateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("returndate <=", value, "returndate");
            return (Criteria) this;
        }

        public Criteria andReturndateIn(List<Date> values) {
            addCriterionForJDBCDate("returndate in", values, "returndate");
            return (Criteria) this;
        }

        public Criteria andReturndateNotIn(List<Date> values) {
            addCriterionForJDBCDate("returndate not in", values, "returndate");
            return (Criteria) this;
        }

        public Criteria andReturndateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("returndate between", value1, value2, "returndate");
            return (Criteria) this;
        }

        public Criteria andReturndateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("returndate not between", value1, value2, "returndate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table borrowecord
     *
     * @mbg.generated do_not_delete_during_merge Sun Dec 29 16:04:15 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table borrowecord
     *
     * @mbg.generated Sun Dec 29 16:04:15 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}